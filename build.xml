<project default="clean" name="bGLOOP built file">

    <property file="./build.properties"/>

    <description>
        ${ant.description}
    </description>

    <condition property="is.windows">
        <os family="windows"/>
    </condition>

    <condition property="is.unix">
        <os family="unix"/>
    </condition>

    <condition property="is.mac">
        <os family="mac"/>
    </condition>

    <property name="project.jar.name" value="${project.name}.jar"/>
    <property name="project.src" value="src"/>
    <property name="project.tmp" value="tmp"/>
    <property name="project.bin" value="bin"/>
    <property name="project.lib" value="lib"/>
    <property name="project.dist" value="dist"/>
    <property name="project.reference" value="reference"/>
    <property name="project.dist.version" value="dist/${project.name}-${library.version}"/>
    <property name="project.dist.latest" value="dist/${project.name}-latest"/>

    <path id="classpath">
        <fileset dir="${project.lib}" includes="**/*.jar"/>
    </path>

    <target name="init">
        <mkdir dir="${project.bin}"/>
    </target>

    <target name="run" depends="init">
        <echo message="building library ..."/>
        <antcall target="generate.structure">
            <param name="folder" value="library"/>
        </antcall>
        <antcall target="compile"/>
        <antcall target="generate.jar">
            <param name="folder" value="library"/>
        </antcall>
        <antcall target="generate.javadoc"/>
        <antcall target="generate.distribution"/>
        <antcall target="generate.zip"/>
    </target>

    <target name="generate.structure">
        <delete dir="${project.tmp}"/>
        <mkdir dir="${project.tmp}"/>
        <mkdir dir="${project.tmp}/${project.name}"/>
        <mkdir dir="${project.tmp}/${project.name}/${folder}"/>
        <mkdir dir="${project.tmp}/${project.name}/reference"/>
        <mkdir dir="${project.tmp}/${project.name}/src"/>
        <copy todir="${project.tmp}/${project.name}/src">
            <fileset dir="${project.src}"/>
        </copy>
        <copy todir="${project.tmp}/${project.name}/${folder}">
            <fileset dir="${project.lib}"/>
        </copy>
    </target>

    <target name="compile">
        <javac srcdir="${project.tmp}/${project.name}/src" destdir="${project.bin}" source="${java.target.version}"
               target="${java.target.version}" includeantruntime="false">
            <classpath>
                <path refid="classpath"/>
            </classpath>
            <compilerarg value="-Xlint"/>
        </javac>
    </target>

    <target name="generate.jar">
        <jar jarfile="${project.tmp}/${project.name}/${folder}/${project.jar.name}" basedir="${project.bin}">
            <fileset file="src/.bgloop" />
            <fileset file="src/log.properties" />
        </jar>
    </target>

    <target name="generate.distribution">
        <mkdir dir="${project.dist}"/>
        <delete dir="${project.dist.version}"/>
        <mkdir dir="${project.dist.version}"/>
        <mkdir dir="${project.dist.version}/${project.name}"/>
        <move file="${project.tmp}/${project.name}" todir="${project.dist.version}"/>
    </target>

    <target name="generate.javadoc">
        <javadoc
                classpath="${project.bin}"
                destdir="${project.tmp}/${project.name}/reference"
                windowtitle="Javadocs: ${project.name}"
                doctitle="Javadocs: ${project.name}"
                public="true"
                stylesheetfile="stylesheet.css"
                sourcepath="${project.tmp}/${project.name}/src"
                encoding="UTF-8" charset="UTF-8" docencoding="UTF-8"
        />
    </target>

    <target name="generate.zip">
        <move todir="${project.dist.version}/tmp/${project.name}">
            <fileset dir="${project.dist.version}/${project.name}"/>
        </move>

        <zip destfile="${project.dist.version}/${project.name}.zip"
             basedir="${project.dist.version}/tmp"
             excludes="**/.DS_Store"
        />

        <delete dir="${project.dist.version}/tmp"/>
        <copy file="${project.dist.version}/${project.name}.zip" tofile="${project.dist.version}.zip"/>
        <delete dir="${project.dist.version}"/>
    </target>

    <target name="clean" depends="run">
        <delete dir="${project.bin}"/>
        <delete dir="${project.tmp}"/>
    </target>
</project>
