DEFAULT_WINDOW_WIDTH=800
DEFAULT_WINDOW_HEIGHT=600

DEFAULT_QUALITY_X=30
DEFAULT_QUALITY_Y=30

# enable double buffering
DOUBLE_BUFFERING = on

# enable lighting of scenerey
LIGHTING = on

# set rendering style (there are up to three ways to
# draw an GLObjekt)
# can be "GLU", "GL", or "VBO"
#
# using GLU makes flickering lines in GLU_LINE mode on my linux machine,
# maybe that's different on other machines
#
# Using VBO uses vertex buffer objects for (hopefully) very fast rendering
# of the bGLOOP objects.
# This should be supported by all OpenGL implementations >= 2.0, so be
# sure your graphic card supports this.
#
DEFAULT_OBJECT_RENDER_MODE = GL

# valid values are "POINT", "LINE", "FILL"
DEFAULT_RENDER_DRAW_MODE = FILL


# GL_FLAT = 0x1D00, GL_SMOOTH = 0x1D01
DEFAULT_SHADE_MODEL = 1D01

# use java AWT or jogl NEWT jogl window implementation 
DEFAULT_WINDOW_MODE = NEWT

# length and width of axes in the developer coordinate system
DEFAULT_AXES_LENGTH = 250
DEFAULT_AXES_WIDTH = 5

# width of wireframe
DEFAULT_LINE_WIDTH = 1

# by how many pixels will the camera zoom
DEFAULT_MOUSE_WHEEL_SCALE = 10

# scale each mesh in its largest diameter (in x, y or z direction)
# to a maximum width of DEFAULT_MESH_MAX_SCALE points
DEFAULT_MESH_MAX_SCALE=100

# time in milliseconds where GLMaus'
# linksklick(), rechtsklick(), and doppelclick() methods
# return true after the click event.
# In other words: when a leftclick happens at 0 milliseconds
# and is checked CLICK_TIME_RANGE+1 milliseconds later by
# calling linksklick(), the method will return false
MOUSE_CLICK_TIME_RANGE=1000

# the same for mouse movement
MOUSE_MOVE_TIME_RANGE=100